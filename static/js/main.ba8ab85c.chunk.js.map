{"version":3,"sources":["App.js","index.js"],"names":["App","useState","state","setState","useEffect","fetch","method","headers","Headers","Accept","then","response","json","data","result","map","item","hasOwnProperty","column","title","items","push","id","toString","className","onDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","key","provided","snapshot","ref","innerRef","droppableProps","element","console","log","draggableId","isDragging","draggableProps","dragHandleProps","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA6GeA,MAzGf,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACNC,EADM,KACCC,EADD,KAoDb,OAjDAC,qBAAU,WACRC,MAAM,gEAAiE,CACrEC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnBC,OAAQ,uBAGPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAIC,EAAS,GACbD,EAAKE,KAAI,SAACC,GACHF,EAAOG,eAAeD,EAAKE,UAC9BJ,EAAOE,EAAKE,QAAU,CACpBC,MAAOH,EAAKE,OACZE,MAAO,KAGXN,EAAOE,EAAKE,QAAQE,MAAMC,KAAK,CAACC,GAAIN,EAAKM,GAAGC,WAAYJ,MAAOH,EAAKG,WAGtEhB,EAASW,QAEd,IA4BC,qBAAKU,UAAU,MAAf,SACE,cAAC,IAAD,CAAiBC,UA3BD,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,OACnC,GAAKD,IAIDA,EAAYE,QAAUD,EAAOC,OAASF,EAAYG,cAAgBF,EAAOE,aAA7E,CAGA,IAAMC,EAAQ,eAAO5B,EAAMyB,EAAOE,aAAaT,MAAMO,EAAOC,QAE5DzB,GAAS,SAAA4B,GAKP,OAJAA,EAAI,eAAOA,IACNJ,EAAOE,aAAaT,MAAMY,OAAOL,EAAOC,MAAO,GACpDG,EAAKL,EAAYG,aAAaT,MAAMY,OAAON,EAAYE,MAAO,EAAGE,GAE1DC,OAYL,SARmB,CAAC,OAAQ,cAAe,SAAU,QASjChB,KAAI,SAACkB,GACrB,GAAI/B,EAAO,CACT,IAAIW,EAAOX,EAAM+B,GACjB,OACI,sBAAeT,UAAW,SAA1B,UACE,6BAAKX,EAAKM,QACV,cAAC,IAAD,CAAWU,YAAaI,EAAxB,SACG,SAACC,EAAUC,GACV,OACI,8CACIC,IAAKF,EAASG,UACVH,EAASI,gBAFjB,IAGId,UAAW,gBAHf,UAKGX,EAAKO,MAAML,KAAI,SAACwB,EAASX,GAExB,OADAY,QAAQC,IAAIF,GAER,cAAC,IAAD,CAA4BX,MAAOA,EAAOc,YAAaH,EAAQjB,GAA/D,SACG,SAACY,EAAUC,GAEV,OADAK,QAAQC,IAAIN,GAER,yDACIX,UAAS,eAAUW,EAASQ,YAAc,YAC1CP,IAAKF,EAASG,UACVH,EAASU,gBACTV,EAASW,iBAJjB,aAMGN,EAAQpB,WAVHoB,EAAQjB,OAiB7BY,EAASY,qBA9BZb,GAsCd,OAAO,aChGrBc,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.ba8ab85c.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\n\nfunction App() {\n  const [state, setState] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://my-json-server.typicode.com/bnissen24/project2DB/posts\", {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/json\"\n      })\n    })\n        .then(response => response.json())\n        .then(data => {\n          let result = {};\n          data.map((item) => {\n            if (!result.hasOwnProperty(item.column)) {\n              result[item.column] = {\n                title: item.column,\n                items: []\n              }\n            }\n            result[item.column].items.push({id: item.id.toString(), title: item.title})\n          });\n\n          setState(result);\n        })\n  }, [])\n\n  const handleDragEnd = ({destination, source}) => {\n    if (!destination) {\n      return\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return\n    }\n    const itemCopy = {...state[source.droppableId].items[source.index]}\n\n    setState(prev => {\n      prev = {...prev}\n      prev[source.droppableId].items.splice(source.index, 1)\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy)\n\n      return prev\n    })\n  }\n\n  const order_of_columns = ['todo', 'in-progress', 'review', 'done'];\n\n\n\n\n\n  return (\n      <div className=\"App\">\n        <DragDropContext onDragEnd={handleDragEnd}>\n          {order_of_columns.map((key) => {\n            if (state) {\n              let data = state[key];\n              return (\n                  <div key={key} className={\"column\"}>\n                    <h3>{data.title}</h3>\n                    <Droppable droppableId={key}>\n                      {(provided, snapshot) => {\n                        return (\n                            <div\n                                ref={provided.innerRef}\n                                {...provided.droppableProps}\n                                className={\"droppable-col\"}\n                            >\n                              {data.items.map((element, index) => {\n                                console.log(element);\n                                return (\n                                    <Draggable key={element.id} index={index} draggableId={element.id}>\n                                      {(provided, snapshot) => {\n                                        console.log(snapshot)\n                                        return (\n                                            <div\n                                                className={`item ${snapshot.isDragging && \"dragging\"}`}\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                            >\n                                              {element.title}\n                                            </div>\n                                        )\n                                      }}\n                                    </Draggable>\n                                )\n                              })}\n                              {provided.placeholder}\n                            </div>\n                        )\n                      }}\n                    </Droppable>\n                  </div>\n              )\n            } else {\n              return null;\n            }\n          })}\n        </DragDropContext>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}